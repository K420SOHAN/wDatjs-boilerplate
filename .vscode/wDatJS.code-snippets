{
	// Place your wDatjs-boilerplate workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"editor.snippetSuggestions": "top",
    "editor.quickSuggestions": {
        "other": "on",
        "comments": "on",
        "strings": "on"
    },
	"Boilerplate from <-wDatJS->": {
		"scope": "javascript,typescript",
		"prefix": "w",
		"body": [
			"const render = ()=>{",
			"App(",
			"   div(",
			"      h1('Hello World',{class:'text-center'})",
			"   ,{class:'container'})",
			").root('App');",
			"}",
			"export const title = 'wDatJS | App';",
			"export default render;",
		],
		"description": "w output to wDatJS Boilerplate"
	},
	"App from <-wDatJS->":{
		"scope": "javascript,typescript",
		"prefix": "App",
		"body": [
			"App($1).root('${2|App,root|}');",
			"$3"
		],
		"description": "App output to App method"
	},
	"class from <-wDatJS->": {
		"scope": "javascript,typescript",
		"prefix": "class",
		"body": [
			"class:'${1|container|}'",
			
		],
		"description": "h1 output to h1 method"
	},
	"div() from <-wDatJS->": {
		"scope": "javascript,typescript",
		"prefix": "div",
		"body": [
			"div(",
			"    '$1'",
			",{class:'$2'})",
		],
		"description": "div output to div method"
	},
	"h1() from <-wDatJS->": {
		"scope": "javascript,typescript",
		"prefix": "h1",
		"body": [
			"h1('$1',{class:'$2'})",
		],
		"description": "h1 output to h1 method"
	},

}